;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18/09/2021 14:42:32
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A8E      	GOTO       654
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x0003	0x30A5      	MOVLW      165
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00FD      	MOVWF      R13
L_Delay_500us4:
0x0007	0x0BFD      	DECFSZ     R13, 1
0x0008	0x2807      	GOTO       L_Delay_500us4
0x0009	0x0000      	NOP
0x000A	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x000B	0x0008      	RETURN
; end of _Delay_500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x000C	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x000D	0x0008      	RETURN
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x000E	0x3010      	MOVLW      16
0x000F	0x1283      	BCF        STATUS, 5
0x0010	0x1303      	BCF        STATUS, 6
0x0011	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0012	0x0BFD      	DECFSZ     R13, 1
0x0013	0x2812      	GOTO       L_Delay_50us2
0x0014	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0015	0x0008      	RETURN
; end of _Delay_50us
_Delay_80us:
;__Lib_Delays.c,23 :: 		void Delay_80us() {
;__Lib_Delays.c,24 :: 		Delay_us(78);
0x0016	0x3019      	MOVLW      25
0x0017	0x1283      	BCF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x00FD      	MOVWF      R13
L_Delay_80us3:
0x001A	0x0BFD      	DECFSZ     R13, 1
0x001B	0x281A      	GOTO       L_Delay_80us3
0x001C	0x0000      	NOP
0x001D	0x0000      	NOP
;__Lib_Delays.c,25 :: 		}
L_end_Delay_80us:
0x001E	0x0008      	RETURN
; end of _Delay_80us
_Ow_Read:
;__Lib_OneWire.c,26 :: 		
;__Lib_OneWire.c,29 :: 		
0x001F	0x1283      	BCF        STATUS, 5
0x0020	0x1303      	BCF        STATUS, 6
0x0021	0x0832      	MOVF       FARG_Ow_Read_pin, 0
0x0022	0x00F1      	MOVWF      R1
0x0023	0x3001      	MOVLW      1
0x0024	0x00F0      	MOVWF      R0
0x0025	0x0871      	MOVF       R1, 0
L__Ow_Read12:
0x0026	0x1903      	BTFSC      STATUS, 2
0x0027	0x282C      	GOTO       L__Ow_Read13
0x0028	0x0DF0      	RLF        R0, 1
0x0029	0x1070      	BCF        R0, 0
0x002A	0x3EFF      	ADDLW      255
0x002B	0x2826      	GOTO       L__Ow_Read12
L__Ow_Read13:
0x002C	0x0870      	MOVF       R0, 0
0x002D	0x00B6      	MOVWF      Ow_Read_bit_mask_1_L0
;__Lib_OneWire.c,30 :: 		
0x002E	0x0970      	COMF       R0, 0
0x002F	0x00B5      	MOVWF      Ow_Read_bit_mask_0_L0
;__Lib_OneWire.c,32 :: 		
0x0030	0x0831      	MOVF       FARG_Ow_Read_port, 0
0x0031	0x0084      	MOVWF      FSR
;__Lib_OneWire.c,33 :: 		
0x0032	0x01B4      	CLRF       Ow_Read_tmp_L0
;__Lib_OneWire.c,34 :: 		
0x0033	0x01B3      	CLRF       Ow_Read_i_L0
L_Ow_Read0:
0x0034	0x0833      	MOVF       Ow_Read_i_L0, 0
0x0035	0x3C07      	SUBLW      7
0x0036	0x1C03      	BTFSS      STATUS, 0
0x0037	0x2858      	GOTO       L_Ow_Read1
;__Lib_OneWire.c,35 :: 		
0x0038	0x0835      	MOVF       Ow_Read_bit_mask_0_L0, 0
0x0039	0x0580      	ANDWF      INDF, 1
;__Lib_OneWire.c,37 :: 		
0x003A	0x1784      	BSF        FSR, 7
;__Lib_OneWire.c,38 :: 		
0x003B	0x0835      	MOVF       Ow_Read_bit_mask_0_L0, 0
0x003C	0x0580      	ANDWF      INDF, 1
;__Lib_OneWire.c,39 :: 		
0x003D	0x200C      	CALL       _Delay_1us
;__Lib_OneWire.c,40 :: 		
0x003E	0x0836      	MOVF       Ow_Read_bit_mask_1_L0, 0
0x003F	0x0480      	IORWF      INDF, 1
;__Lib_OneWire.c,41 :: 		
0x0040	0x200C      	CALL       _Delay_1us
;__Lib_OneWire.c,43 :: 		
0x0041	0x1384      	BCF        FSR, 7
;__Lib_OneWire.c,44 :: 		
0x0042	0x0836      	MOVF       Ow_Read_bit_mask_1_L0, 0
0x0043	0x0500      	ANDWF      INDF, 0
0x0044	0x00F0      	MOVWF      R0
0x0045	0x1903      	BTFSC      STATUS, 2
0x0046	0x2854      	GOTO       L_Ow_Read3
;__Lib_OneWire.c,45 :: 		
0x0047	0x0833      	MOVF       Ow_Read_i_L0, 0
0x0048	0x00F1      	MOVWF      R1
0x0049	0x3001      	MOVLW      1
0x004A	0x00F0      	MOVWF      R0
0x004B	0x0871      	MOVF       R1, 0
L__Ow_Read14:
0x004C	0x1903      	BTFSC      STATUS, 2
0x004D	0x2852      	GOTO       L__Ow_Read15
0x004E	0x0DF0      	RLF        R0, 1
0x004F	0x1070      	BCF        R0, 0
0x0050	0x3EFF      	ADDLW      255
0x0051	0x284C      	GOTO       L__Ow_Read14
L__Ow_Read15:
0x0052	0x0870      	MOVF       R0, 0
0x0053	0x04B4      	IORWF      Ow_Read_tmp_L0, 1
L_Ow_Read3:
;__Lib_OneWire.c,47 :: 		
0x0054	0x200E      	CALL       _Delay_50us
;__Lib_OneWire.c,48 :: 		
0x0055	0x200E      	CALL       _Delay_50us
;__Lib_OneWire.c,34 :: 		
0x0056	0x0AB3      	INCF       Ow_Read_i_L0, 1
;__Lib_OneWire.c,49 :: 		
0x0057	0x2834      	GOTO       L_Ow_Read0
L_Ow_Read1:
;__Lib_OneWire.c,50 :: 		
0x0058	0x0834      	MOVF       Ow_Read_tmp_L0, 0
0x0059	0x00F0      	MOVWF      R0
;__Lib_OneWire.c,51 :: 		
L_end_Ow_Read:
0x005A	0x0008      	RETURN
; end of _Ow_Read
_Ow_Write:
;__Lib_OneWire.c,54 :: 		
;__Lib_OneWire.c,57 :: 		
0x005B	0x1283      	BCF        STATUS, 5
0x005C	0x1303      	BCF        STATUS, 6
0x005D	0x0832      	MOVF       FARG_Ow_Write_pin, 0
0x005E	0x00F1      	MOVWF      R1
0x005F	0x3001      	MOVLW      1
0x0060	0x00F0      	MOVWF      R0
0x0061	0x0871      	MOVF       R1, 0
L__Ow_Write17:
0x0062	0x1903      	BTFSC      STATUS, 2
0x0063	0x2868      	GOTO       L__Ow_Write18
0x0064	0x0DF0      	RLF        R0, 1
0x0065	0x1070      	BCF        R0, 0
0x0066	0x3EFF      	ADDLW      255
0x0067	0x2862      	GOTO       L__Ow_Write17
L__Ow_Write18:
0x0068	0x0870      	MOVF       R0, 0
0x0069	0x00B6      	MOVWF      Ow_Write_bit_mask_1_L0
;__Lib_OneWire.c,58 :: 		
0x006A	0x09F0      	COMF       R0, 1
0x006B	0x0870      	MOVF       R0, 0
0x006C	0x00B5      	MOVWF      Ow_Write_bit_mask_0_L0
;__Lib_OneWire.c,60 :: 		
0x006D	0x0831      	MOVF       FARG_Ow_Write_port, 0
0x006E	0x0084      	MOVWF      FSR
;__Lib_OneWire.c,61 :: 		
0x006F	0x0870      	MOVF       R0, 0
0x0070	0x0580      	ANDWF      INDF, 1
;__Lib_OneWire.c,62 :: 		
0x0071	0x1784      	BSF        FSR, 7
;__Lib_OneWire.c,64 :: 		
0x0072	0x01B4      	CLRF       Ow_Write_i_L0
L_Ow_Write4:
0x0073	0x0834      	MOVF       Ow_Write_i_L0, 0
0x0074	0x3C07      	SUBLW      7
0x0075	0x1C03      	BTFSS      STATUS, 0
0x0076	0x288D      	GOTO       L_Ow_Write5
;__Lib_OneWire.c,65 :: 		
0x0077	0x0834      	MOVF       Ow_Write_i_L0, 0
0x0078	0x00F0      	MOVWF      R0
0x0079	0x0833      	MOVF       FARG_Ow_Write_data_, 0
0x007A	0x00F1      	MOVWF      R1
0x007B	0x0870      	MOVF       R0, 0
L__Ow_Write19:
0x007C	0x1903      	BTFSC      STATUS, 2
0x007D	0x2882      	GOTO       L__Ow_Write20
0x007E	0x0CF1      	RRF        R1, 1
0x007F	0x13F1      	BCF        R1, 7
0x0080	0x3EFF      	ADDLW      255
0x0081	0x287C      	GOTO       L__Ow_Write19
L__Ow_Write20:
;__Lib_OneWire.c,68 :: 		
0x0082	0x0835      	MOVF       Ow_Write_bit_mask_0_L0, 0
0x0083	0x0580      	ANDWF      INDF, 1
;__Lib_OneWire.c,70 :: 		
0x0084	0x1C71      	BTFSS      R1, 0
0x0085	0x2888      	GOTO       L_Ow_Write7
;__Lib_OneWire.c,71 :: 		
0x0086	0x0836      	MOVF       Ow_Write_bit_mask_1_L0, 0
0x0087	0x0480      	IORWF      INDF, 1
;__Lib_OneWire.c,72 :: 		
L_Ow_Write7:
;__Lib_OneWire.c,74 :: 		
0x0088	0x2016      	CALL       _Delay_80us
;__Lib_OneWire.c,76 :: 		
0x0089	0x0836      	MOVF       Ow_Write_bit_mask_1_L0, 0
0x008A	0x0480      	IORWF      INDF, 1
;__Lib_OneWire.c,64 :: 		
0x008B	0x0AB4      	INCF       Ow_Write_i_L0, 1
;__Lib_OneWire.c,77 :: 		
0x008C	0x2873      	GOTO       L_Ow_Write4
L_Ow_Write5:
;__Lib_OneWire.c,78 :: 		
0x008D	0x1384      	BCF        FSR, 7
;__Lib_OneWire.c,80 :: 		
0x008E	0x200E      	CALL       _Delay_50us
;__Lib_OneWire.c,81 :: 		
0x008F	0x200E      	CALL       _Delay_50us
;__Lib_OneWire.c,82 :: 		
L_end_Ow_Write:
0x0090	0x0008      	RETURN
; end of _Ow_Write
_Ow_Reset:
;__Lib_OneWire.c,5 :: 		
;__Lib_OneWire.c,8 :: 		
0x0091	0x1283      	BCF        STATUS, 5
0x0092	0x1303      	BCF        STATUS, 6
0x0093	0x0832      	MOVF       FARG_Ow_Reset_pin, 0
0x0094	0x00F1      	MOVWF      R1
0x0095	0x3001      	MOVLW      1
0x0096	0x00F0      	MOVWF      R0
0x0097	0x0871      	MOVF       R1, 0
L__Ow_Reset9:
0x0098	0x1903      	BTFSC      STATUS, 2
0x0099	0x289E      	GOTO       L__Ow_Reset10
0x009A	0x0DF0      	RLF        R0, 1
0x009B	0x1070      	BCF        R0, 0
0x009C	0x3EFF      	ADDLW      255
0x009D	0x2898      	GOTO       L__Ow_Reset9
L__Ow_Reset10:
0x009E	0x0870      	MOVF       R0, 0
0x009F	0x00B4      	MOVWF      Ow_Reset_bit_mask_1_L0
;__Lib_OneWire.c,9 :: 		
0x00A0	0x09F0      	COMF       R0, 1
;__Lib_OneWire.c,11 :: 		
0x00A1	0x0831      	MOVF       FARG_Ow_Reset_port, 0
0x00A2	0x0084      	MOVWF      FSR
;__Lib_OneWire.c,12 :: 		
0x00A3	0x0870      	MOVF       R0, 0
0x00A4	0x0580      	ANDWF      INDF, 1
;__Lib_OneWire.c,13 :: 		
0x00A5	0x1784      	BSF        FSR, 7
;__Lib_OneWire.c,14 :: 		
0x00A6	0x0870      	MOVF       R0, 0
0x00A7	0x0580      	ANDWF      INDF, 1
;__Lib_OneWire.c,15 :: 		
0x00A8	0x2003      	CALL       _Delay_500us
;__Lib_OneWire.c,16 :: 		
0x00A9	0x0834      	MOVF       Ow_Reset_bit_mask_1_L0, 0
0x00AA	0x0480      	IORWF      INDF, 1
;__Lib_OneWire.c,18 :: 		
0x00AB	0x1384      	BCF        FSR, 7
;__Lib_OneWire.c,19 :: 		
0x00AC	0x2016      	CALL       _Delay_80us
;__Lib_OneWire.c,20 :: 		
0x00AD	0x0834      	MOVF       Ow_Reset_bit_mask_1_L0, 0
0x00AE	0x0500      	ANDWF      INDF, 0
0x00AF	0x00B3      	MOVWF      Ow_Reset_res_L0
0x00B0	0x0833      	MOVF       Ow_Reset_res_L0, 0
0x00B1	0x3A00      	XORLW      0
0x00B2	0x3001      	MOVLW      1
0x00B3	0x1903      	BTFSC      STATUS, 2
0x00B4	0x3000      	MOVLW      0
0x00B5	0x00B3      	MOVWF      Ow_Reset_res_L0
;__Lib_OneWire.c,21 :: 		
0x00B6	0x2003      	CALL       _Delay_500us
;__Lib_OneWire.c,22 :: 		
0x00B7	0x0833      	MOVF       Ow_Reset_res_L0, 0
0x00B8	0x00F0      	MOVWF      R0
;__Lib_OneWire.c,23 :: 		
L_end_Ow_Reset:
0x00B9	0x0008      	RETURN
; end of _Ow_Reset
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00BA	0x1283      	BCF        STATUS, 5
0x00BB	0x1303      	BCF        STATUS, 6
0x00BC	0x0828      	MOVF       ___DoICPAddr+1, 0
0x00BD	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00BE	0x0827      	MOVF       ___DoICPAddr, 0
0x00BF	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00C0	0x0008      	RETURN
; end of _____DoICP
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x00C1	0x1283      	BCF        STATUS, 5
0x00C2	0x1303      	BCF        STATUS, 6
0x00C3	0x01B6      	CLRF       Button_rslt_L0
;__Lib_Button.c,11 :: 		
0x00C4	0x0832      	MOVF       FARG_Button_pin, 0
0x00C5	0x00F1      	MOVWF      R1
0x00C6	0x3001      	MOVLW      1
0x00C7	0x00F0      	MOVWF      R0
0x00C8	0x0871      	MOVF       R1, 0
L__Button5:
0x00C9	0x1903      	BTFSC      STATUS, 2
0x00CA	0x28CF      	GOTO       L__Button6
0x00CB	0x0DF0      	RLF        R0, 1
0x00CC	0x1070      	BCF        R0, 0
0x00CD	0x3EFF      	ADDLW      255
0x00CE	0x28C9      	GOTO       L__Button5
L__Button6:
0x00CF	0x0870      	MOVF       R0, 0
0x00D0	0x00B5      	MOVWF      Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x00D1	0x0831      	MOVF       FARG_Button_port, 0
0x00D2	0x0084      	MOVWF      FSR
0x00D3	0x0870      	MOVF       R0, 0
0x00D4	0x0500      	ANDWF      INDF, 0
0x00D5	0x00F1      	MOVWF      R1
0x00D6	0x0871      	MOVF       R1, 0
0x00D7	0x3001      	MOVLW      1
0x00D8	0x1D03      	BTFSS      STATUS, 2
0x00D9	0x3000      	MOVLW      0
0x00DA	0x00F0      	MOVWF      R0
0x00DB	0x0834      	MOVF       FARG_Button_active_state, 0
0x00DC	0x06F0      	XORWF      R0, 1
0x00DD	0x1903      	BTFSC      STATUS, 2
0x00DE	0x28F7      	GOTO       L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x00DF	0x0833      	MOVF       FARG_Button_time_ms, 0
0x00E0	0x3C00      	SUBLW      0
0x00E1	0x1803      	BTFSC      STATUS, 0
0x00E2	0x28E7      	GOTO       L_Button2
;__Lib_Button.c,16 :: 		
0x00E3	0x2003      	CALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x00E4	0x2003      	CALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x00E5	0x03B3      	DECF       FARG_Button_time_ms, 1
;__Lib_Button.c,19 :: 		
0x00E6	0x28DF      	GOTO       L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x00E7	0x0831      	MOVF       FARG_Button_port, 0
0x00E8	0x0084      	MOVWF      FSR
0x00E9	0x0835      	MOVF       Button_pMask_L0, 0
0x00EA	0x0500      	ANDWF      INDF, 0
0x00EB	0x00F1      	MOVWF      R1
0x00EC	0x0871      	MOVF       R1, 0
0x00ED	0x3001      	MOVLW      1
0x00EE	0x1D03      	BTFSS      STATUS, 2
0x00EF	0x3000      	MOVLW      0
0x00F0	0x00F0      	MOVWF      R0
0x00F1	0x0834      	MOVF       FARG_Button_active_state, 0
0x00F2	0x06F0      	XORWF      R0, 1
0x00F3	0x1903      	BTFSC      STATUS, 2
0x00F4	0x28F7      	GOTO       L_Button3
;__Lib_Button.c,22 :: 		
0x00F5	0x30FF      	MOVLW      255
0x00F6	0x00B6      	MOVWF      Button_rslt_L0
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x00F7	0x0836      	MOVF       Button_rslt_L0, 0
0x00F8	0x00F0      	MOVWF      R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x00F9	0x0008      	RETURN
; end of _Button
_DS18B20:
;sensor.c,133 :: 		void DS18B20()
;sensor.c,135 :: 		Ow_Reset(&PORTB, 7);       // Onewire reset signal
0x00FA	0x3006      	MOVLW      PORTB
0x00FB	0x1283      	BCF        STATUS, 5
0x00FC	0x1303      	BCF        STATUS, 6
0x00FD	0x00B1      	MOVWF      FARG_Ow_Reset_port
0x00FE	0x3007      	MOVLW      7
0x00FF	0x00B2      	MOVWF      FARG_Ow_Reset_pin
0x0100	0x2091      	CALL       _Ow_Reset
;sensor.c,136 :: 		Ow_Write(&PORTB, 7, 0xCC); // Issue command SKIP_ROM
0x0101	0x3006      	MOVLW      PORTB
0x0102	0x00B1      	MOVWF      FARG_Ow_Write_port
0x0103	0x3007      	MOVLW      7
0x0104	0x00B2      	MOVWF      FARG_Ow_Write_pin
0x0105	0x30CC      	MOVLW      204
0x0106	0x00B3      	MOVWF      FARG_Ow_Write_data_
0x0107	0x205B      	CALL       _Ow_Write
;sensor.c,137 :: 		Ow_Write(&PORTB, 7, 0x44); // Issue command CONVERT_T
0x0108	0x3006      	MOVLW      PORTB
0x0109	0x00B1      	MOVWF      FARG_Ow_Write_port
0x010A	0x3007      	MOVLW      7
0x010B	0x00B2      	MOVWF      FARG_Ow_Write_pin
0x010C	0x3044      	MOVLW      68
0x010D	0x00B3      	MOVWF      FARG_Ow_Write_data_
0x010E	0x205B      	CALL       _Ow_Write
;sensor.c,138 :: 		Ow_Reset(&PORTB, 7);
0x010F	0x3006      	MOVLW      PORTB
0x0110	0x00B1      	MOVWF      FARG_Ow_Reset_port
0x0111	0x3007      	MOVLW      7
0x0112	0x00B2      	MOVWF      FARG_Ow_Reset_pin
0x0113	0x2091      	CALL       _Ow_Reset
;sensor.c,139 :: 		Ow_Write(&PORTB, 7, 0xCC); // Issue command SKIP_ROM
0x0114	0x3006      	MOVLW      PORTB
0x0115	0x00B1      	MOVWF      FARG_Ow_Write_port
0x0116	0x3007      	MOVLW      7
0x0117	0x00B2      	MOVWF      FARG_Ow_Write_pin
0x0118	0x30CC      	MOVLW      204
0x0119	0x00B3      	MOVWF      FARG_Ow_Write_data_
0x011A	0x205B      	CALL       _Ow_Write
;sensor.c,140 :: 		Ow_Write(&PORTB, 7, 0xBE); // Issue command READ_SCRATCHPAD
0x011B	0x3006      	MOVLW      PORTB
0x011C	0x00B1      	MOVWF      FARG_Ow_Write_port
0x011D	0x3007      	MOVLW      7
0x011E	0x00B2      	MOVWF      FARG_Ow_Write_pin
0x011F	0x30BE      	MOVLW      190
0x0120	0x00B3      	MOVWF      FARG_Ow_Write_data_
0x0121	0x205B      	CALL       _Ow_Write
;sensor.c,142 :: 		temp_value = Ow_Read(&PORTB, 7);                     // Read Byte 0 from Scratchpad
0x0122	0x3006      	MOVLW      PORTB
0x0123	0x00B1      	MOVWF      FARG_Ow_Read_port
0x0124	0x3007      	MOVLW      7
0x0125	0x00B2      	MOVWF      FARG_Ow_Read_pin
0x0126	0x201F      	CALL       _Ow_Read
0x0127	0x0870      	MOVF       R0, 0
0x0128	0x00A1      	MOVWF      _temp_value
0x0129	0x01A2      	CLRF       _temp_value+1
;sensor.c,143 :: 		temp_value = (Ow_Read(&PORTB, 7) << 8) + temp_value; // Then read Byte 1 from
0x012A	0x3006      	MOVLW      PORTB
0x012B	0x00B1      	MOVWF      FARG_Ow_Read_port
0x012C	0x3007      	MOVLW      7
0x012D	0x00B2      	MOVWF      FARG_Ow_Read_pin
0x012E	0x201F      	CALL       _Ow_Read
0x012F	0x0870      	MOVF       R0, 0
0x0130	0x00F2      	MOVWF      R1+1
0x0131	0x01F1      	CLRF       R1
0x0132	0x0871      	MOVF       R1, 0
0x0133	0x07A1      	ADDWF      _temp_value, 1
0x0134	0x0872      	MOVF       R1+1, 0
0x0135	0x1803      	BTFSC      STATUS, 0
0x0136	0x3E01      	ADDLW      1
0x0137	0x07A2      	ADDWF      _temp_value+1, 1
;sensor.c,146 :: 		if (temp_value & 0x8000)
0x0138	0x1FA2      	BTFSS      _temp_value+1, 7
0x0139	0x2941      	GOTO       L_DS18B2033
;sensor.c,148 :: 		temp_value = ~temp_value + 1;
0x013A	0x09A1      	COMF       _temp_value, 1
0x013B	0x09A2      	COMF       _temp_value+1, 1
0x013C	0x0AA1      	INCF       _temp_value, 1
0x013D	0x1903      	BTFSC      STATUS, 2
0x013E	0x0AA2      	INCF       _temp_value+1, 1
;sensor.c,149 :: 		N_Flag = 1; // Temp is -ive
0x013F	0x3001      	MOVLW      1
0x0140	0x00AA      	MOVWF      _N_Flag
;sensor.c,150 :: 		}
L_DS18B2033:
;sensor.c,151 :: 		if (temp_value & 0x0001)
0x0141	0x1C21      	BTFSS      _temp_value, 0
0x0142	0x2946      	GOTO       L_DS18B2034
;sensor.c,152 :: 		temp_value += 1;          // 0.5 round to 1
0x0143	0x0AA1      	INCF       _temp_value, 1
0x0144	0x1903      	BTFSC      STATUS, 2
0x0145	0x0AA2      	INCF       _temp_value+1, 1
L_DS18B2034:
;sensor.c,153 :: 		temp_value = temp_value >> 4; //<<<  // 1 for DS1820 and
0x0146	0x0CA2      	RRF        _temp_value+1, 1
0x0147	0x0CA1      	RRF        _temp_value, 1
0x0148	0x13A2      	BCF        _temp_value+1, 7
0x0149	0x0CA2      	RRF        _temp_value+1, 1
0x014A	0x0CA1      	RRF        _temp_value, 1
0x014B	0x13A2      	BCF        _temp_value+1, 7
0x014C	0x0CA2      	RRF        _temp_value+1, 1
0x014D	0x0CA1      	RRF        _temp_value, 1
0x014E	0x13A2      	BCF        _temp_value+1, 7
0x014F	0x0CA2      	RRF        _temp_value+1, 1
0x0150	0x0CA1      	RRF        _temp_value, 1
0x0151	0x13A2      	BCF        _temp_value+1, 7
;sensor.c,155 :: 		if (N_Flag == 1)              //Verifico que el valor de temperatura es negativo
0x0152	0x082A      	MOVF       _N_Flag, 0
0x0153	0x3A01      	XORLW      1
0x0154	0x1D03      	BTFSS      STATUS, 2
0x0155	0x2958      	GOTO       L_DS18B2035
;sensor.c,157 :: 		temp_value = 0; //Seteo la temperatura en 0 grados
0x0156	0x01A1      	CLRF       _temp_value
0x0157	0x01A2      	CLRF       _temp_value+1
;sensor.c,158 :: 		}
L_DS18B2035:
;sensor.c,159 :: 		if (temp_value >= 99) //Verifico que el valor de temperatura es mayor a 99
0x0158	0x3000      	MOVLW      0
0x0159	0x0222      	SUBWF      _temp_value+1, 0
0x015A	0x1D03      	BTFSS      STATUS, 2
0x015B	0x295E      	GOTO       L__DS18B2047
0x015C	0x3063      	MOVLW      99
0x015D	0x0221      	SUBWF      _temp_value, 0
L__DS18B2047:
0x015E	0x1C03      	BTFSS      STATUS, 0
0x015F	0x2964      	GOTO       L_DS18B2036
;sensor.c,161 :: 		temp_value = 99; //Seteo la temperatura en 99 grados
0x0160	0x3063      	MOVLW      99
0x0161	0x00A1      	MOVWF      _temp_value
0x0162	0x3000      	MOVLW      0
0x0163	0x00A2      	MOVWF      _temp_value+1
;sensor.c,162 :: 		}
L_DS18B2036:
;sensor.c,163 :: 		}
L_end_DS18B20:
0x0164	0x0008      	RETURN
; end of _DS18B20
_presionBoton:
;sensor.c,164 :: 		unsigned short presionBoton(unsigned short pin) //Verifica si se presiona o suelta el boton
;sensor.c,166 :: 		int pulso = 0;
0x0165	0x1283      	BCF        STATUS, 5
0x0166	0x1303      	BCF        STATUS, 6
0x0167	0x01AD      	CLRF       presionBoton_pulso_L0
0x0168	0x01AE      	CLRF       presionBoton_pulso_L0+1
0x0169	0x01AF      	CLRF       presionBoton_oldstate_L0
0x016A	0x01B0      	CLRF       presionBoton_oldstate_L0+1
;sensor.c,168 :: 		pulso = Button(&PORTA, pin, 100, 1);
0x016B	0x3005      	MOVLW      PORTA
0x016C	0x00B1      	MOVWF      FARG_Button_port
0x016D	0x082C      	MOVF       FARG_presionBoton_pin, 0
0x016E	0x00B2      	MOVWF      FARG_Button_pin
0x016F	0x3064      	MOVLW      100
0x0170	0x00B3      	MOVWF      FARG_Button_time_ms
0x0171	0x3001      	MOVLW      1
0x0172	0x00B4      	MOVWF      FARG_Button_active_state
0x0173	0x20C1      	CALL       _Button
0x0174	0x0870      	MOVF       R0, 0
0x0175	0x00AD      	MOVWF      presionBoton_pulso_L0
0x0176	0x01AE      	CLRF       presionBoton_pulso_L0+1
;sensor.c,169 :: 		if (pulso != 0)
0x0177	0x3000      	MOVLW      0
0x0178	0x062E      	XORWF      presionBoton_pulso_L0+1, 0
0x0179	0x1D03      	BTFSS      STATUS, 2
0x017A	0x297D      	GOTO       L__presionBoton49
0x017B	0x3000      	MOVLW      0
0x017C	0x062D      	XORWF      presionBoton_pulso_L0, 0
L__presionBoton49:
0x017D	0x1903      	BTFSC      STATUS, 2
0x017E	0x2983      	GOTO       L_presionBoton37
;sensor.c,171 :: 		oldstate = 1;
0x017F	0x3001      	MOVLW      1
0x0180	0x00AF      	MOVWF      presionBoton_oldstate_L0
0x0181	0x3000      	MOVLW      0
0x0182	0x00B0      	MOVWF      presionBoton_oldstate_L0+1
;sensor.c,172 :: 		}
L_presionBoton37:
;sensor.c,173 :: 		while (pulso == 1)
L_presionBoton38:
0x0183	0x3000      	MOVLW      0
0x0184	0x062E      	XORWF      presionBoton_pulso_L0+1, 0
0x0185	0x1D03      	BTFSS      STATUS, 2
0x0186	0x2989      	GOTO       L__presionBoton50
0x0187	0x3001      	MOVLW      1
0x0188	0x062D      	XORWF      presionBoton_pulso_L0, 0
L__presionBoton50:
0x0189	0x1D03      	BTFSS      STATUS, 2
0x018A	0x2998      	GOTO       L_presionBoton39
;sensor.c,175 :: 		pulso = Button(&PORTA, pin, 100, 1);
0x018B	0x3005      	MOVLW      PORTA
0x018C	0x00B1      	MOVWF      FARG_Button_port
0x018D	0x082C      	MOVF       FARG_presionBoton_pin, 0
0x018E	0x00B2      	MOVWF      FARG_Button_pin
0x018F	0x3064      	MOVLW      100
0x0190	0x00B3      	MOVWF      FARG_Button_time_ms
0x0191	0x3001      	MOVLW      1
0x0192	0x00B4      	MOVWF      FARG_Button_active_state
0x0193	0x20C1      	CALL       _Button
0x0194	0x0870      	MOVF       R0, 0
0x0195	0x00AD      	MOVWF      presionBoton_pulso_L0
0x0196	0x01AE      	CLRF       presionBoton_pulso_L0+1
;sensor.c,176 :: 		}
0x0197	0x2983      	GOTO       L_presionBoton38
L_presionBoton39:
;sensor.c,177 :: 		if (oldstate == 1)
0x0198	0x3000      	MOVLW      0
0x0199	0x0630      	XORWF      presionBoton_oldstate_L0+1, 0
0x019A	0x1D03      	BTFSS      STATUS, 2
0x019B	0x299E      	GOTO       L__presionBoton51
0x019C	0x3001      	MOVLW      1
0x019D	0x062F      	XORWF      presionBoton_oldstate_L0, 0
L__presionBoton51:
0x019E	0x1D03      	BTFSS      STATUS, 2
0x019F	0x29A3      	GOTO       L_presionBoton40
;sensor.c,179 :: 		return pin;
0x01A0	0x082C      	MOVF       FARG_presionBoton_pin, 0
0x01A1	0x00F0      	MOVWF      R0
0x01A2	0x29A4      	GOTO       L_end_presionBoton
;sensor.c,180 :: 		}
L_presionBoton40:
;sensor.c,183 :: 		return 0;
0x01A3	0x01F0      	CLRF       R0
;sensor.c,185 :: 		}
L_end_presionBoton:
0x01A4	0x0008      	RETURN
; end of _presionBoton
_display_temp:
;sensor.c,118 :: 		void display_temp(short DD0, short DD1)
;sensor.c,120 :: 		for (i = 0; i <= 4; i++)
0x01A5	0x1283      	BCF        STATUS, 5
0x01A6	0x1303      	BCF        STATUS, 6
0x01A7	0x01AB      	CLRF       _i
L_display_temp28:
0x01A8	0x082B      	MOVF       _i, 0
0x01A9	0x3C04      	SUBLW      4
0x01AA	0x1C03      	BTFSS      STATUS, 0
0x01AB	0x29CA      	GOTO       L_display_temp29
;sensor.c,122 :: 		PORTB = DD0;
0x01AC	0x082C      	MOVF       FARG_display_temp_DD0, 0
0x01AD	0x0086      	MOVWF      PORTB
;sensor.c,123 :: 		RA0_bit = 0;
0x01AE	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;sensor.c,124 :: 		RA1_bit = 1;
0x01AF	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
;sensor.c,125 :: 		delay_ms(2);
0x01B0	0x3003      	MOVLW      3
0x01B1	0x00FC      	MOVWF      R12
0x01B2	0x3097      	MOVLW      151
0x01B3	0x00FD      	MOVWF      R13
L_display_temp31:
0x01B4	0x0BFD      	DECFSZ     R13, 1
0x01B5	0x29B4      	GOTO       L_display_temp31
0x01B6	0x0BFC      	DECFSZ     R12, 1
0x01B7	0x29B4      	GOTO       L_display_temp31
0x01B8	0x0000      	NOP
0x01B9	0x0000      	NOP
;sensor.c,126 :: 		PORTB = DD1;
0x01BA	0x082D      	MOVF       FARG_display_temp_DD1, 0
0x01BB	0x0086      	MOVWF      PORTB
;sensor.c,127 :: 		RA0_bit = 1;
0x01BC	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
;sensor.c,128 :: 		RA1_bit = 0;
0x01BD	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
;sensor.c,129 :: 		delay_ms(2);
0x01BE	0x3003      	MOVLW      3
0x01BF	0x00FC      	MOVWF      R12
0x01C0	0x3097      	MOVLW      151
0x01C1	0x00FD      	MOVWF      R13
L_display_temp32:
0x01C2	0x0BFD      	DECFSZ     R13, 1
0x01C3	0x29C2      	GOTO       L_display_temp32
0x01C4	0x0BFC      	DECFSZ     R12, 1
0x01C5	0x29C2      	GOTO       L_display_temp32
0x01C6	0x0000      	NOP
0x01C7	0x0000      	NOP
;sensor.c,120 :: 		for (i = 0; i <= 4; i++)
0x01C8	0x0AAB      	INCF       _i, 1
;sensor.c,130 :: 		}
0x01C9	0x29A8      	GOTO       L_display_temp28
L_display_temp29:
;sensor.c,131 :: 		return;
;sensor.c,132 :: 		}
L_end_display_temp:
0x01CA	0x0008      	RETURN
; end of _display_temp
_EEPROM_Write:
;__Lib_EEPROM.c,16 :: 		
;__Lib_EEPROM.c,20 :: 		
L_EEPROM_Write0:
0x01CB	0x1683      	BSF        STATUS, 5
0x01CC	0x1303      	BCF        STATUS, 6
0x01CD	0x1C9C      	BTFSS      EECON1, 1
0x01CE	0x29D1      	GOTO       L_EEPROM_Write1
0x01CF	0x0000      	NOP
0x01D0	0x29CB      	GOTO       L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM.c,21 :: 		
0x01D1	0x1283      	BCF        STATUS, 5
0x01D2	0x082C      	MOVF       FARG_EEPROM_Write_Address, 0
0x01D3	0x1683      	BSF        STATUS, 5
0x01D4	0x009B      	MOVWF      EEADR
;__Lib_EEPROM.c,22 :: 		
0x01D5	0x1283      	BCF        STATUS, 5
0x01D6	0x082D      	MOVF       FARG_EEPROM_Write_data_, 0
0x01D7	0x1683      	BSF        STATUS, 5
0x01D8	0x009A      	MOVWF      EEDATA
;__Lib_EEPROM.c,23 :: 		
0x01D9	0x139C      	BCF        EECON1, 7
;__Lib_EEPROM.c,24 :: 		
0x01DA	0x151C      	BSF        EECON1, 2
;__Lib_EEPROM.c,26 :: 		
0x01DB	0x080B      	MOVF       INTCON, 0
0x01DC	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,29 :: 		
0x01DD	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.c,30 :: 		
0x01DE	0x3055      	MOVLW      85
0x01DF	0x009D      	MOVWF      EECON2
;__Lib_EEPROM.c,31 :: 		
0x01E0	0x30AA      	MOVLW      170
0x01E1	0x009D      	MOVWF      EECON2
;__Lib_EEPROM.c,32 :: 		
0x01E2	0x149C      	BSF        EECON1, 1
;__Lib_EEPROM.c,36 :: 		
0x01E3	0x1BF0      	BTFSC      R0, 7
0x01E4	0x29E7      	GOTO       L__EEPROM_Write4
0x01E5	0x138B      	BCF        INTCON, 7
0x01E6	0x29E8      	GOTO       L__EEPROM_Write5
L__EEPROM_Write4:
0x01E7	0x178B      	BSF        INTCON, 7
L__EEPROM_Write5:
;__Lib_EEPROM.c,37 :: 		
0x01E8	0x111C      	BCF        EECON1, 2
;__Lib_EEPROM.c,38 :: 		
L_end_EEPROM_Write:
0x01E9	0x0008      	RETURN
; end of _EEPROM_Write
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x01EA	0x20BA      	CALL       _____DoICP
0x01EB	0x118A      	BCF        PCLATH, 3
0x01EC	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x01ED	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x01EE	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x01EF	0x0AA7      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x01F0	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x01F1	0x0AA8      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x01F2	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x01F3	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x01F4	0x29EA      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x01F5	0x0008      	RETURN
; end of ___CC2DW
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x01F6	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x01F7	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x01F8	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x01F9	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x01FA	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x01FB	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x01FC	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x01FD	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x01FE	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x01FF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0200	0x2A03      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0201	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0202	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x0203	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x0204	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x0205	0x29FB      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x0206	0x0008      	RETURN
; end of _Div_8X8_U
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0207	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0208	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0209	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x020A	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x020B	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x020C	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x020D	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x020E	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x020F	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x0210	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0211	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x0212	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0213	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0214	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0215	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0216	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0217	0x2A1F      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0218	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0219	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x021A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x021B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x021C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x021D	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x021E	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x021F	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x0220	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0221	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x0222	0x2A0D      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0223	0x0008      	RETURN
; end of _Div_16X16_U
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x0224	0x1283      	BCF        STATUS, 5
0x0225	0x1303      	BCF        STATUS, 6
0x0226	0x082C      	MOVF       FARG_EEPROM_Read_Address, 0
0x0227	0x1683      	BSF        STATUS, 5
0x0228	0x009B      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x0229	0x139C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x022A	0x141C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x022B	0x081A      	MOVF       EEDATA, 0
0x022C	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
L_end_EEPROM_Read:
0x022D	0x0008      	RETURN
; end of _EEPROM_Read
_mask:
;sensor.c,86 :: 		unsigned short mask(unsigned short num) // Mask for 7 segment Common Anode;
;sensor.c,88 :: 		switch (num)
0x022E	0x2A57      	GOTO       L_mask13
;sensor.c,90 :: 		case 0:
L_mask15:
;sensor.c,91 :: 		return 0x40; // 0;
0x022F	0x3040      	MOVLW      64
0x0230	0x1283      	BCF        STATUS, 5
0x0231	0x1303      	BCF        STATUS, 6
0x0232	0x00F0      	MOVWF      R0
0x0233	0x2A8D      	GOTO       L_end_mask
;sensor.c,92 :: 		case 1:
L_mask16:
;sensor.c,93 :: 		return 0x79; // 1;
0x0234	0x3079      	MOVLW      121
0x0235	0x00F0      	MOVWF      R0
0x0236	0x2A8D      	GOTO       L_end_mask
;sensor.c,94 :: 		case 2:
L_mask17:
;sensor.c,95 :: 		return 0x24; // 2;
0x0237	0x3024      	MOVLW      36
0x0238	0x00F0      	MOVWF      R0
0x0239	0x2A8D      	GOTO       L_end_mask
;sensor.c,96 :: 		case 3:
L_mask18:
;sensor.c,97 :: 		return 0x30; // 3;
0x023A	0x3030      	MOVLW      48
0x023B	0x00F0      	MOVWF      R0
0x023C	0x2A8D      	GOTO       L_end_mask
;sensor.c,98 :: 		case 4:
L_mask19:
;sensor.c,99 :: 		return 0x19; // 4;
0x023D	0x3019      	MOVLW      25
0x023E	0x00F0      	MOVWF      R0
0x023F	0x2A8D      	GOTO       L_end_mask
;sensor.c,100 :: 		case 5:
L_mask20:
;sensor.c,101 :: 		return 0x12; // 5;
0x0240	0x3012      	MOVLW      18
0x0241	0x00F0      	MOVWF      R0
0x0242	0x2A8D      	GOTO       L_end_mask
;sensor.c,102 :: 		case 6:
L_mask21:
;sensor.c,103 :: 		return 0x02; // 6;
0x0243	0x3002      	MOVLW      2
0x0244	0x00F0      	MOVWF      R0
0x0245	0x2A8D      	GOTO       L_end_mask
;sensor.c,104 :: 		case 7:
L_mask22:
;sensor.c,105 :: 		return 0x78; // 7;
0x0246	0x3078      	MOVLW      120
0x0247	0x00F0      	MOVWF      R0
0x0248	0x2A8D      	GOTO       L_end_mask
;sensor.c,106 :: 		case 8:
L_mask23:
;sensor.c,107 :: 		return 0x00; // 8;
0x0249	0x01F0      	CLRF       R0
0x024A	0x2A8D      	GOTO       L_end_mask
;sensor.c,108 :: 		case 9:
L_mask24:
;sensor.c,109 :: 		return 0x10; // 9;
0x024B	0x3010      	MOVLW      16
0x024C	0x00F0      	MOVWF      R0
0x024D	0x2A8D      	GOTO       L_end_mask
;sensor.c,110 :: 		case 10:
L_mask25:
;sensor.c,111 :: 		return 0xBF; // Symbol '-'
0x024E	0x30BF      	MOVLW      191
0x024F	0x00F0      	MOVWF      R0
0x0250	0x2A8D      	GOTO       L_end_mask
;sensor.c,112 :: 		case 11:
L_mask26:
;sensor.c,113 :: 		return 0x9E; // Symbol C
0x0251	0x309E      	MOVLW      158
0x0252	0x00F0      	MOVWF      R0
0x0253	0x2A8D      	GOTO       L_end_mask
;sensor.c,114 :: 		case 12:
L_mask27:
;sensor.c,115 :: 		return 0xFF; // Blank
0x0254	0x30FF      	MOVLW      255
0x0255	0x00F0      	MOVWF      R0
0x0256	0x2A8D      	GOTO       L_end_mask
;sensor.c,116 :: 		}                //case end
L_mask13:
0x0257	0x1283      	BCF        STATUS, 5
0x0258	0x1303      	BCF        STATUS, 6
0x0259	0x082C      	MOVF       FARG_mask_num, 0
0x025A	0x3A00      	XORLW      0
0x025B	0x1903      	BTFSC      STATUS, 2
0x025C	0x2A2F      	GOTO       L_mask15
0x025D	0x082C      	MOVF       FARG_mask_num, 0
0x025E	0x3A01      	XORLW      1
0x025F	0x1903      	BTFSC      STATUS, 2
0x0260	0x2A34      	GOTO       L_mask16
0x0261	0x082C      	MOVF       FARG_mask_num, 0
0x0262	0x3A02      	XORLW      2
0x0263	0x1903      	BTFSC      STATUS, 2
0x0264	0x2A37      	GOTO       L_mask17
0x0265	0x082C      	MOVF       FARG_mask_num, 0
0x0266	0x3A03      	XORLW      3
0x0267	0x1903      	BTFSC      STATUS, 2
0x0268	0x2A3A      	GOTO       L_mask18
0x0269	0x082C      	MOVF       FARG_mask_num, 0
0x026A	0x3A04      	XORLW      4
0x026B	0x1903      	BTFSC      STATUS, 2
0x026C	0x2A3D      	GOTO       L_mask19
0x026D	0x082C      	MOVF       FARG_mask_num, 0
0x026E	0x3A05      	XORLW      5
0x026F	0x1903      	BTFSC      STATUS, 2
0x0270	0x2A40      	GOTO       L_mask20
0x0271	0x082C      	MOVF       FARG_mask_num, 0
0x0272	0x3A06      	XORLW      6
0x0273	0x1903      	BTFSC      STATUS, 2
0x0274	0x2A43      	GOTO       L_mask21
0x0275	0x082C      	MOVF       FARG_mask_num, 0
0x0276	0x3A07      	XORLW      7
0x0277	0x1903      	BTFSC      STATUS, 2
0x0278	0x2A46      	GOTO       L_mask22
0x0279	0x082C      	MOVF       FARG_mask_num, 0
0x027A	0x3A08      	XORLW      8
0x027B	0x1903      	BTFSC      STATUS, 2
0x027C	0x2A49      	GOTO       L_mask23
0x027D	0x082C      	MOVF       FARG_mask_num, 0
0x027E	0x3A09      	XORLW      9
0x027F	0x1903      	BTFSC      STATUS, 2
0x0280	0x2A4B      	GOTO       L_mask24
0x0281	0x082C      	MOVF       FARG_mask_num, 0
0x0282	0x3A0A      	XORLW      10
0x0283	0x1903      	BTFSC      STATUS, 2
0x0284	0x2A4E      	GOTO       L_mask25
0x0285	0x082C      	MOVF       FARG_mask_num, 0
0x0286	0x3A0B      	XORLW      11
0x0287	0x1903      	BTFSC      STATUS, 2
0x0288	0x2A51      	GOTO       L_mask26
0x0289	0x082C      	MOVF       FARG_mask_num, 0
0x028A	0x3A0C      	XORLW      12
0x028B	0x1903      	BTFSC      STATUS, 2
0x028C	0x2A54      	GOTO       L_mask27
;sensor.c,117 :: 		}
L_end_mask:
0x028D	0x0008      	RETURN
; end of _mask
_main:
0x028E	0x300A      	MOVLW      10
0x028F	0x1283      	BCF        STATUS, 5
0x0290	0x1303      	BCF        STATUS, 6
0x0291	0x00A0      	MOVWF      _temp_minima
0x0292	0x01A1      	CLRF       _temp_value
0x0293	0x01A2      	CLRF       34
0x0294	0x3040      	MOVLW      64
0x0295	0x00A3      	MOVWF      _DD0
0x0296	0x3014      	MOVLW      20
0x0297	0x00A4      	MOVWF      _temp_por_defecto
0x0298	0x3040      	MOVLW      64
0x0299	0x00A5      	MOVWF      _DD1
0x029A	0x3063      	MOVLW      99
0x029B	0x00A6      	MOVWF      _temp_maxima
;sensor.c,10 :: 		void main()
;sensor.c,12 :: 		CMCON |= 7;     // Disable Comparators
0x029C	0x3007      	MOVLW      7
0x029D	0x049F      	IORWF      CMCON, 1
;sensor.c,13 :: 		TRISA0_bit = 0; // RA.0 to RA.2 Output, RA.4 Output
0x029E	0x1683      	BSF        STATUS, 5
0x029F	0x1005      	BCF        TRISA0_bit, BitPos(TRISA0_bit+0)
;sensor.c,14 :: 		TRISA1_bit = 0; // RB.0 to RB.6 Output
0x02A0	0x1085      	BCF        TRISA1_bit, BitPos(TRISA1_bit+0)
;sensor.c,15 :: 		TRISA2_bit = 0; // RA.5 Resetn Only
0x02A1	0x1105      	BCF        TRISA2_bit, BitPos(TRISA2_bit+0)
;sensor.c,16 :: 		TRISA4_bit = 0; // RA.3 Input temp +
0x02A2	0x1205      	BCF        TRISA4_bit, BitPos(TRISA4_bit+0)
;sensor.c,17 :: 		TRISB0_bit = 0; // RA.6 Input temp -
0x02A3	0x1006      	BCF        TRISB0_bit, BitPos(TRISB0_bit+0)
;sensor.c,18 :: 		TRISB1_bit = 0; // RA.7 Input start/stop
0x02A4	0x1086      	BCF        TRISB1_bit, BitPos(TRISB1_bit+0)
;sensor.c,19 :: 		TRISB2_bit = 0; //**********************************************//
0x02A5	0x1106      	BCF        TRISB2_bit, BitPos(TRISB2_bit+0)
;sensor.c,20 :: 		TRISB3_bit = 0;
0x02A6	0x1186      	BCF        TRISB3_bit, BitPos(TRISB3_bit+0)
;sensor.c,21 :: 		TRISB4_bit = 0;
0x02A7	0x1206      	BCF        TRISB4_bit, BitPos(TRISB4_bit+0)
;sensor.c,22 :: 		TRISB5_bit = 0;
0x02A8	0x1286      	BCF        TRISB5_bit, BitPos(TRISB5_bit+0)
;sensor.c,23 :: 		TRISB6_bit = 0;
0x02A9	0x1306      	BCF        TRISB6_bit, BitPos(TRISB6_bit+0)
;sensor.c,24 :: 		PORTB = 1;
0x02AA	0x3001      	MOVLW      1
0x02AB	0x1283      	BCF        STATUS, 5
0x02AC	0x0086      	MOVWF      PORTB
;sensor.c,26 :: 		temp_por_defecto = EEPROM_Read(0x01);  //lee el valor de la temperatura seteada que se almacena en la eeprom
0x02AD	0x3001      	MOVLW      1
0x02AE	0x00AC      	MOVWF      FARG_EEPROM_Read_Address
0x02AF	0x2224      	CALL       _EEPROM_Read
0x02B0	0x0870      	MOVF       R0, 0
0x02B1	0x1283      	BCF        STATUS, 5
0x02B2	0x00A4      	MOVWF      _temp_por_defecto
;sensor.c,27 :: 		valor_manual = temp_por_defecto;
0x02B3	0x0824      	MOVF       _temp_por_defecto, 0
0x02B4	0x00A9      	MOVWF      _valor_manual
;sensor.c,28 :: 		RA0_bit = 0;  //LOGICA POSITIVA
0x02B5	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;sensor.c,29 :: 		RA1_bit = 0;  //LOGICA POSITIVA
0x02B6	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
;sensor.c,30 :: 		RA2_bit = 1;  //LOGICA NEGATIVA
0x02B7	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
;sensor.c,31 :: 		RA4_bit = 0;  //LOGICA POSITIVA
0x02B8	0x1205      	BCF        RA4_bit, BitPos(RA4_bit+0)
;sensor.c,32 :: 		do
L_main0:
;sensor.c,34 :: 		DD0 = valor_manual % 10; // Extract One Digit
0x02B9	0x300A      	MOVLW      10
0x02BA	0x00F4      	MOVWF      R4
0x02BB	0x0829      	MOVF       _valor_manual, 0
0x02BC	0x00F0      	MOVWF      R0
0x02BD	0x21F6      	CALL       _Div_8X8_U
0x02BE	0x0878      	MOVF       R8, 0
0x02BF	0x00F0      	MOVWF      R0
0x02C0	0x0870      	MOVF       R0, 0
0x02C1	0x00A3      	MOVWF      _DD0
;sensor.c,35 :: 		DD0 = mask(DD0);
0x02C2	0x0823      	MOVF       _DD0, 0
0x02C3	0x00AC      	MOVWF      FARG_mask_num
0x02C4	0x222E      	CALL       _mask
0x02C5	0x1283      	BCF        STATUS, 5
0x02C6	0x1303      	BCF        STATUS, 6
0x02C7	0x0870      	MOVF       R0, 0
0x02C8	0x00A3      	MOVWF      _DD0
;sensor.c,36 :: 		DD1 = (valor_manual / 10) % 10; // Extract Tens Digit
0x02C9	0x300A      	MOVLW      10
0x02CA	0x00F4      	MOVWF      R4
0x02CB	0x0829      	MOVF       _valor_manual, 0
0x02CC	0x00F0      	MOVWF      R0
0x02CD	0x21F6      	CALL       _Div_8X8_U
0x02CE	0x300A      	MOVLW      10
0x02CF	0x00F4      	MOVWF      R4
0x02D0	0x21F6      	CALL       _Div_8X8_U
0x02D1	0x0878      	MOVF       R8, 0
0x02D2	0x00F0      	MOVWF      R0
0x02D3	0x0870      	MOVF       R0, 0
0x02D4	0x00A5      	MOVWF      _DD1
;sensor.c,37 :: 		DD1 = mask(DD1);
0x02D5	0x0825      	MOVF       _DD1, 0
0x02D6	0x00AC      	MOVWF      FARG_mask_num
0x02D7	0x222E      	CALL       _mask
0x02D8	0x1283      	BCF        STATUS, 5
0x02D9	0x1303      	BCF        STATUS, 6
0x02DA	0x0870      	MOVF       R0, 0
0x02DB	0x00A5      	MOVWF      _DD1
;sensor.c,38 :: 		display_temp(DD0, DD1);
0x02DC	0x0823      	MOVF       _DD0, 0
0x02DD	0x00AC      	MOVWF      FARG_display_temp_DD0
0x02DE	0x0825      	MOVF       _DD1, 0
0x02DF	0x00AD      	MOVWF      FARG_display_temp_DD1
0x02E0	0x21A5      	CALL       _display_temp
;sensor.c,40 :: 		if (presionBoton(3) == 3) //Si se presiono el boton de temp +
0x02E1	0x3003      	MOVLW      3
0x02E2	0x00AC      	MOVWF      FARG_presionBoton_pin
0x02E3	0x2165      	CALL       _presionBoton
0x02E4	0x0870      	MOVF       R0, 0
0x02E5	0x3A03      	XORLW      3
0x02E6	0x1D03      	BTFSS      STATUS, 2
0x02E7	0x2AF2      	GOTO       L_main3
;sensor.c,42 :: 		if (valor_manual < temp_maxima) //Si el valor seteado es menor a la temperatura maxima acumule en 1
0x02E8	0x0826      	MOVF       _temp_maxima, 0
0x02E9	0x0229      	SUBWF      _valor_manual, 0
0x02EA	0x1803      	BTFSC      STATUS, 0
0x02EB	0x2AF2      	GOTO       L_main4
;sensor.c,44 :: 		valor_manual++;
0x02EC	0x0AA9      	INCF       _valor_manual, 1
;sensor.c,45 :: 		EEPROM_Write(0x01,valor_manual);
0x02ED	0x3001      	MOVLW      1
0x02EE	0x00AC      	MOVWF      FARG_EEPROM_Write_Address
0x02EF	0x0829      	MOVF       _valor_manual, 0
0x02F0	0x00AD      	MOVWF      FARG_EEPROM_Write_data_
0x02F1	0x21CB      	CALL       _EEPROM_Write
;sensor.c,46 :: 		}
L_main4:
;sensor.c,47 :: 		}
L_main3:
;sensor.c,48 :: 		if (presionBoton(6) == 6) //si se presiono el boton de temp -
0x02F2	0x3006      	MOVLW      6
0x02F3	0x1283      	BCF        STATUS, 5
0x02F4	0x00AC      	MOVWF      FARG_presionBoton_pin
0x02F5	0x2165      	CALL       _presionBoton
0x02F6	0x0870      	MOVF       R0, 0
0x02F7	0x3A06      	XORLW      6
0x02F8	0x1D03      	BTFSS      STATUS, 2
0x02F9	0x2B04      	GOTO       L_main5
;sensor.c,50 :: 		if (valor_manual >= temp_minima) //Si el valor seteado es mayor a la temperatura maxima disminuye en 1
0x02FA	0x0820      	MOVF       _temp_minima, 0
0x02FB	0x0229      	SUBWF      _valor_manual, 0
0x02FC	0x1C03      	BTFSS      STATUS, 0
0x02FD	0x2B04      	GOTO       L_main6
;sensor.c,52 :: 		valor_manual--;
0x02FE	0x03A9      	DECF       _valor_manual, 1
;sensor.c,53 :: 		EEPROM_Write(0x01,valor_manual);
0x02FF	0x3001      	MOVLW      1
0x0300	0x00AC      	MOVWF      FARG_EEPROM_Write_Address
0x0301	0x0829      	MOVF       _valor_manual, 0
0x0302	0x00AD      	MOVWF      FARG_EEPROM_Write_data_
0x0303	0x21CB      	CALL       _EEPROM_Write
;sensor.c,54 :: 		}
L_main6:
;sensor.c,55 :: 		}
L_main5:
;sensor.c,56 :: 		if (presionBoton(7) == 7) //si se presiono el boton start
0x0304	0x3007      	MOVLW      7
0x0305	0x1283      	BCF        STATUS, 5
0x0306	0x00AC      	MOVWF      FARG_presionBoton_pin
0x0307	0x2165      	CALL       _presionBoton
0x0308	0x0870      	MOVF       R0, 0
0x0309	0x3A07      	XORLW      7
0x030A	0x1D03      	BTFSS      STATUS, 2
0x030B	0x2B59      	GOTO       L_main7
;sensor.c,58 :: 		do
L_main8:
;sensor.c,60 :: 		N_Flag = 0; // Reset Temp Flag
0x030C	0x01AA      	CLRF       _N_Flag
;sensor.c,61 :: 		DS18B20();
0x030D	0x20FA      	CALL       _DS18B20
;sensor.c,62 :: 		DD0 = temp_value % 10;
0x030E	0x300A      	MOVLW      10
0x030F	0x00F4      	MOVWF      R4
0x0310	0x3000      	MOVLW      0
0x0311	0x00F5      	MOVWF      R4+1
0x0312	0x0821      	MOVF       _temp_value, 0
0x0313	0x00F0      	MOVWF      R0
0x0314	0x0822      	MOVF       _temp_value+1, 0
0x0315	0x00F1      	MOVWF      R0+1
0x0316	0x2207      	CALL       _Div_16X16_U
0x0317	0x0878      	MOVF       R8, 0
0x0318	0x00F0      	MOVWF      R0
0x0319	0x0879      	MOVF       R8+1, 0
0x031A	0x00F1      	MOVWF      R0+1
0x031B	0x0870      	MOVF       R0, 0
0x031C	0x00A3      	MOVWF      _DD0
;sensor.c,63 :: 		DD0 = mask(DD0);
0x031D	0x0823      	MOVF       _DD0, 0
0x031E	0x00AC      	MOVWF      FARG_mask_num
0x031F	0x222E      	CALL       _mask
0x0320	0x1283      	BCF        STATUS, 5
0x0321	0x1303      	BCF        STATUS, 6
0x0322	0x0870      	MOVF       R0, 0
0x0323	0x00A3      	MOVWF      _DD0
;sensor.c,64 :: 		DD1 = (temp_value / 10) % 10;
0x0324	0x300A      	MOVLW      10
0x0325	0x00F4      	MOVWF      R4
0x0326	0x3000      	MOVLW      0
0x0327	0x00F5      	MOVWF      R4+1
0x0328	0x0821      	MOVF       _temp_value, 0
0x0329	0x00F0      	MOVWF      R0
0x032A	0x0822      	MOVF       _temp_value+1, 0
0x032B	0x00F1      	MOVWF      R0+1
0x032C	0x2207      	CALL       _Div_16X16_U
0x032D	0x300A      	MOVLW      10
0x032E	0x00F4      	MOVWF      R4
0x032F	0x3000      	MOVLW      0
0x0330	0x00F5      	MOVWF      R4+1
0x0331	0x2207      	CALL       _Div_16X16_U
0x0332	0x0878      	MOVF       R8, 0
0x0333	0x00F0      	MOVWF      R0
0x0334	0x0879      	MOVF       R8+1, 0
0x0335	0x00F1      	MOVWF      R0+1
0x0336	0x0870      	MOVF       R0, 0
0x0337	0x00A5      	MOVWF      _DD1
;sensor.c,65 :: 		DD1 = mask(DD1);
0x0338	0x0825      	MOVF       _DD1, 0
0x0339	0x00AC      	MOVWF      FARG_mask_num
0x033A	0x222E      	CALL       _mask
0x033B	0x1283      	BCF        STATUS, 5
0x033C	0x1303      	BCF        STATUS, 6
0x033D	0x0870      	MOVF       R0, 0
0x033E	0x00A5      	MOVWF      _DD1
;sensor.c,66 :: 		display_temp(DD0, DD1);
0x033F	0x0823      	MOVF       _DD0, 0
0x0340	0x00AC      	MOVWF      FARG_display_temp_DD0
0x0341	0x0825      	MOVF       _DD1, 0
0x0342	0x00AD      	MOVWF      FARG_display_temp_DD1
0x0343	0x21A5      	CALL       _display_temp
;sensor.c,67 :: 		if (temp_value >= valor_manual)
0x0344	0x3000      	MOVLW      0
0x0345	0x0222      	SUBWF      _temp_value+1, 0
0x0346	0x1D03      	BTFSS      STATUS, 2
0x0347	0x2B4A      	GOTO       L__main43
0x0348	0x0829      	MOVF       _valor_manual, 0
0x0349	0x0221      	SUBWF      _temp_value, 0
L__main43:
0x034A	0x1C03      	BTFSS      STATUS, 0
0x034B	0x2B4F      	GOTO       L_main11
;sensor.c,69 :: 		RA2_bit = 1;
0x034C	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
;sensor.c,70 :: 		RA4_bit = 0;
0x034D	0x1205      	BCF        RA4_bit, BitPos(RA4_bit+0)
;sensor.c,71 :: 		}
0x034E	0x2B51      	GOTO       L_main12
L_main11:
;sensor.c,74 :: 		RA2_bit = 0;
0x034F	0x1105      	BCF        RA2_bit, BitPos(RA2_bit+0)
;sensor.c,75 :: 		RA4_bit = 1;
0x0350	0x1605      	BSF        RA4_bit, BitPos(RA4_bit+0)
;sensor.c,76 :: 		}
L_main12:
;sensor.c,78 :: 		} while (!presionBoton(7)); //Mientras no se presione el boton start
0x0351	0x3007      	MOVLW      7
0x0352	0x00AC      	MOVWF      FARG_presionBoton_pin
0x0353	0x2165      	CALL       _presionBoton
0x0354	0x0870      	MOVF       R0, 0
0x0355	0x1903      	BTFSC      STATUS, 2
0x0356	0x2B0C      	GOTO       L_main8
;sensor.c,79 :: 		RA2_bit = 1;       //LOGICA NEGATIVA
0x0357	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
;sensor.c,80 :: 		RA4_bit = 0;       //LOGICA POSITIVA
0x0358	0x1205      	BCF        RA4_bit, BitPos(RA4_bit+0)
;sensor.c,81 :: 		}
L_main7:
;sensor.c,83 :: 		} while (1);
0x0359	0x2AB9      	GOTO       L_main0
;sensor.c,84 :: 		}
L_end_main:
0x035A	0x2B5A      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [9]    _Delay_500us
0x000C       [2]    _Delay_1us
0x000E       [8]    _Delay_50us
0x0016       [9]    _Delay_80us
0x001F      [60]    _Ow_Read
0x005B      [54]    _Ow_Write
0x0091      [41]    _Ow_Reset
0x00BA       [7]    _____DoICP
0x00C1      [57]    _Button
0x00FA     [107]    _DS18B20
0x0165      [64]    _presionBoton
0x01A5      [38]    _display_temp
0x01CB      [31]    _EEPROM_Write
0x01EA      [12]    ___CC2DW
0x01F6      [17]    _Div_8X8_U
0x0207      [29]    _Div_16X16_U
0x0224      [10]    _EEPROM_Read
0x022E      [96]    _mask
0x028E     [205]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    RA4_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA0_bit
0x0005       [1]    PORTA
0x0005       [0]    RA2_bit
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x001F       [1]    CMCON
0x0020       [1]    _temp_minima
0x0021       [2]    _temp_value
0x0023       [1]    _DD0
0x0024       [1]    _temp_por_defecto
0x0025       [1]    _DD1
0x0026       [1]    _temp_maxima
0x0027       [2]    ___DoICPAddr
0x0029       [1]    _valor_manual
0x002A       [1]    _N_Flag
0x002B       [1]    _i
0x002C       [1]    FARG_display_temp_DD0
0x002C       [1]    FARG_mask_num
0x002C       [1]    FARG_EEPROM_Read_Address
0x002C       [1]    FARG_presionBoton_pin
0x002C       [1]    FARG_EEPROM_Write_Address
0x002D       [2]    presionBoton_pulso_L0
0x002D       [1]    FARG_display_temp_DD1
0x002D       [1]    FARG_EEPROM_Write_data_
0x002F       [2]    presionBoton_oldstate_L0
0x0031       [1]    FARG_Button_port
0x0031       [1]    FARG_Ow_Write_port
0x0031       [1]    FARG_Ow_Reset_port
0x0031       [1]    FARG_Ow_Read_port
0x0032       [1]    FARG_Ow_Write_pin
0x0032       [1]    FARG_Ow_Reset_pin
0x0032       [1]    FARG_Ow_Read_pin
0x0032       [1]    FARG_Button_pin
0x0033       [1]    FARG_Button_time_ms
0x0033       [1]    Ow_Reset_res_L0
0x0033       [1]    FARG_Ow_Write_data_
0x0033       [1]    Ow_Read_i_L0
0x0034       [1]    Ow_Reset_bit_mask_1_L0
0x0034       [1]    Ow_Write_i_L0
0x0034       [1]    Ow_Read_tmp_L0
0x0034       [1]    FARG_Button_active_state
0x0035       [1]    Ow_Read_bit_mask_0_L0
0x0035       [1]    Ow_Write_bit_mask_0_L0
0x0035       [1]    Button_pMask_L0
0x0036       [1]    Ow_Write_bit_mask_1_L0
0x0036       [1]    Ow_Read_bit_mask_1_L0
0x0036       [1]    Button_rslt_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA2_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB5_bit
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009D       [1]    EECON2
